class PrivateKey:
    SIZE: int
    SEED_SIZE: int
    public_key: PublicKey
    def __init__(self, private_key: bytes, encoder=...): ...
    @classmethod
    def generate(cls) -> PrivateKey: ...
    def __bytes__(self) -> bytes: ...

class PublicKey:
    SIZE: int
    def __init__(self, public_key: bytes, encoder=...): ...
    def __bytes__(self) -> bytes: ...

class Box:
    NONCE_SIZE: int
    def __init__(self, private_key: PrivateKey, public_key: PublicKey): ...
    def decrypt(self, ciphertext: bytes, nonce: bytes = ..., encoder=...): ...
    def encrypt(self, plaintext: bytes, nonce: bytes = ..., encoder=...): ...
